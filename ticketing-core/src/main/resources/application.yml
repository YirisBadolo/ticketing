# ticketing-core/src/main/resources/application.yml
spring:
  application:
    name: ticketing-core
    version: 1.0.0

  # MongoDB Configuration
  data:
    mongodb:
      host: ${MONGODB_HOST:localhost}
      port: ${MONGODB_HOST:27017}
      username: ${MONGODB_USERNAME:admin}
      password: ${MONGODB_PASSWORD:mgp@ssAdmin++}
      database: ${MONGODB_DATABASE:ticketing}
      authentication-database: ${MONGODB_AUTHENTICATION_DATABASE:admin}
      pool:
        max-size: 100
        min-size: 5
        max-idle-time-ms: 30000
        max-life-time-ms: 60000

    # Redis Configuration
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:redp@ssAdmin++}
      timeout: 2000
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 2
          max-wait: -1ms

  # WebFlux Configuration
  webflux:
    base-path: /api/v1

  # Jackson Configuration
  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false
      indent-output: true
    deserialization:
      fail-on-unknown-properties: false
    time-zone: UTC

# Server Configuration
server:
  port: ${SERVER_PORT:8081}
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false

# Management Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
      show-components: always
  health:
    redis:
      enabled: true
    mongo:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

# Logging Configuration
logging:
  level:
    com.ticketing: INFO
    org.springframework.data.mongodb: DEBUG
    org.springframework.data.redis: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"

# Application Properties
app:
  name: Ticketing Core Service
  description: Core service for ticketing system
  version: 1.0.0
  timezone: UTC

  # Security Configuration
  security:
    jwt:
      secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
      expiration: 86400000 # 24 hours
      refresh-expiration: 604800000 # 7 days

    cors:
      allowed-origins: "*"
      allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
      allowed-headers: "*"
      max-age: 3600

  # Cache Configuration
  cache:
    redis:
      ttl: ${CACHE_TTL:7200} # 2 hours
      prefix: ${CACHE_PREFIX:prod:ticketing:}

  async:
    core-pool-size: ${ASYNC_CORE_POOL_SIZE:10}
    max-pool-size: ${ASYNC_MAX_POOL_SIZE:50}
    queue-capacity: ${ASYNC_QUEUE_CAPACITY:500}

  # Business Configuration
  business:
    max-tickets-per-user: ${MAX_TICKETS_PER_USER:10}
    ticket-expiry-hours: ${TICKET_EXPIRY_HOURS:24}
    max-file-size: ${MAX_FILE_SIZE:10MB}

# Security
debug: false
trace: false